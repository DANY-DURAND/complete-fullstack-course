Backend Tools and Technologies - Which One to Learn?

1. Introduction to Backend Tools and Technologies
Now that we have learned about clients, servers, and databases, let us discuss the technologies that professional developers use to create backends.

2. Frontend Programming Languages
The programming languages used on the frontend are quite fixed. It essentially has to be HTML, CSS, and JavaScript, because these are the only things that the browser can work with.

Even though we have seen and worked with some frameworks on the frontend, such as React, Angular, and Vue, these are all JavaScript frameworks. All they do is act as the waiter who allows the client to interact with, ask questions about the menu, notify them if their email is inputted in an invalid format, handle all frontend display and logic, and then, when our request reaches the backend, we can actually work with almost any programming language.

3. Backend Programming Languages
Some of the most popular backend programming languages are Java, Ruby, PHP, C-sharp, Python, and JavaScript. The reason why the backend language does not really matter is because, as long as you are able to use something to generate the HTML, CSS, and JavaScript files to send back to the frontend, it does not matter what language you use to do that.

For example, if you wanted to Google the sunniest place on earth, you could do that in Japanese, German, French, or English. It does not really matter what language you use, as long as you get the results back in a format that you can read.

4. Common Backend Frameworks
Some of the most common backend frameworks you might come across on the internet are:

- Rails (Ruby on Rails)
- The Java Spring Framework
- C-sharp ASP.NET from Microsoft
- PHP frameworks such as Laravel or Cake
- Python frameworks such as Flask and Django
- JavaScript with Node.js

5. Why Learn Node.js?
The framework and language that we are going to be using and learning on the backend is Node.js. The first reason is in the name: it is a JavaScript backend framework, and we have invested significant time learning JavaScript for the frontend with React and Vanilla JavaScript. Now, we want to be able to reuse that knowledge of JavaScript to work with it on the backend using Node.js.

That is not the only reason, though. It is not just because we already know JavaScript that we are using Node.js. If you look at the latest StackOverflow Developer Survey, where they surveyed 45,000 developers and classified them into Professional Developers and those who are Learning to Code, you will see that for Professional Developers, the number one used framework is Node.js. This list mixes all frameworks, not just frontend or backend, which is why you see React and Angular, and we are going to be covering the number one most popular framework.

If you want to build a website and have access to the most helpful resources, the most documentation, and the most help online, then you will want to use the most popular framework. Also, if you want to get a job, and you see that the number one tool that professional developers use is Node.js, that means most jobs asking for a backend developer or a full-stack developer will expect you to know Node.js.

6. Popularity of Other Backend Frameworks
Let us look at some of the other frameworks mentioned: ASP.NET, Django, Flask (Python), Laravel (PHP), and Ruby on Rails. These are all much less popular compared to Node.js, and some of them do not really change in their popularity. There is always some work for people who are C-sharp developers, and always some work for those who work with Python, especially for machine learning web apps.

However, PHP (in the case of Laravel) and Ruby (in the case of Ruby on Rails) are actually declining in popularity over the years. If you see a web bootcamp that is still teaching Ruby on Rails, you should probably think twice about signing up. Without a doubt, the most popular backend framework that you need to know is Node.js.

7. Focusing on Node.js
Because we cannot make a 500-hour course, we have to focus on one technology instead of covering all the technologies, which would take an impractical amount of time. The choice made is for ease of use, since you already know JavaScript, but also because Node.js is the most professionally important framework you will be expected to know as a backend developer.

I hope you are excited to learn Node.js, and we will start right away in the next lesson.

8. Key Takeaways
 - Backend programming languages are flexible, unlike the frontend which is limited to HTML, CSS, and JavaScript.
- Node.js is the most popular backend framework among professional developers, according to the latest StackOverflow Developer Survey.
- Learning Node.js is advantageous due to its popularity, extensive resources, and compatibility with existing JavaScript knowledge.
- Other backend frameworks like ASP.NET, Django, Flask, Laravel, and Ruby on Rails are less popular, with some declining in use.